name: Build and Push Docker Images
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: .uv_cache
          key: uv-cache-${{ hashFiles('**/uv.lock') }}
          restore-keys: uv-cache-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "ghcr.io/${{ github.repository }}"
          tags: "type=sha,format=short"
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/Dockerfile
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          cache-from: type=gha
          cache-to: "type=gha,mode=max"
          build-args: |
            UV_CACHE_DIR=${{ github.workspace }}/.uv_cache
  build-celery:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: .uv_cache
          key: uv-cache-${{ hashFiles('**/uv.lock') }}
          restore-keys: uv-cache-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: Extract Docker metadata for Celery
        id: meta_celery
        uses: docker/metadata-action@v5
        with:
          images: "ghcr.io/${{ github.repository }}-celery"
          tags: "type=sha,format=short"
      - name: Build and push Celery Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/celery/Dockerfile
          push: true
          tags: "${{ steps.meta_celery.outputs.tags }}"
          labels: "${{ steps.meta_celery.outputs.labels }}"
          cache-from: type=gha
          cache-to: "type=gha,mode=max"
          build-args: |
            UV_CACHE_DIR=${{ github.workspace }}/.uv_cache
